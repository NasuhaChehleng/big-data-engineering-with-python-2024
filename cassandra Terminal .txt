Last login: Sun Mar 16 23:53:59 on ttys000
(base) fis011@fis011 ~ % cassandra      
(base) fis011@fis011 ~ % CompileCommand: dontinline org/apache/cassandra/db/Columns$Serializer.deserializeLargeSubset(Lorg/apache/cassandra/io/util/DataInputPlus;Lorg/apache/cassandra/db/Columns;I)Lorg/apache/cassandra/db/Columns; bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/db/Columns$Serializer.serializeLargeSubset(Ljava/util/Collection;ILorg/apache/cassandra/db/Columns;ILorg/apache/cassandra/io/util/DataOutputPlus;)V bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/db/Columns$Serializer.serializeLargeSubsetSize(Ljava/util/Collection;ILorg/apache/cassandra/db/Columns;I)I bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/db/commitlog/AbstractCommitLogSegmentManager.advanceAllocatingFrom(Lorg/apache/cassandra/db/commitlog/CommitLogSegment;)V bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/db/transform/BaseIterator.tryGetMoreContents()Z bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/db/transform/StoppingTransformation.stop()V bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/db/transform/StoppingTransformation.stopInPartition()V bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/io/util/BufferedDataOutputStreamPlus.doFlush(I)V bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/io/util/BufferedDataOutputStreamPlus.writeSlow(JI)V bool dontinline = true
CompileCommand: dontinline org/apache/cassandra/io/util/RebufferingInputStream.readPrimitiveSlowly(I)J bool dontinline = true
CompileCommand: exclude org/apache/cassandra/utils/JVMStabilityInspector.forceHeapSpaceOomMaybe(Ljava/lang/OutOfMemoryError;)V bool exclude = true
CompileCommand: inline org/apache/cassandra/db/NativeDecoratedKey.address()J bool inline = true
CompileCommand: inline org/apache/cassandra/db/NativeDecoratedKey.length()I bool inline = true
CompileCommand: inline org/apache/cassandra/db/rows/UnfilteredSerializer.serializeRowBody(Lorg/apache/cassandra/db/rows/Row;ILorg/apache/cassandra/db/rows/SerializationHelper;Lorg/apache/cassandra/io/util/DataOutputPlus;)V bool inline = true
CompileCommand: inline org/apache/cassandra/io/util/Memory.checkBounds(JJ)V bool inline = true
CompileCommand: inline org/apache/cassandra/io/util/SafeMemory.checkBounds(JJ)V bool inline = true
CompileCommand: inline org/apache/cassandra/io/util/TrackedDataInputPlus.checkCanRead(I)V bool inline = true
CompileCommand: inline org/apache/cassandra/net/FrameDecoderWith8bHeader.decode(Ljava/util/Collection;Lorg/apache/cassandra/net/ShareableBytes;I)V bool inline = true
CompileCommand: inline org/apache/cassandra/service/reads/repair/RowIteratorMergeListener.applyToPartition(ILjava/util/function/Consumer;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/AsymmetricOrdering.selectBoundary(Lorg/apache/cassandra/utils/AsymmetricOrdering/Op;II)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/AsymmetricOrdering.strictnessOfLessThan(Lorg/apache/cassandra/utils/AsymmetricOrdering/Op;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/BloomFilter.indexes(Lorg/apache/cassandra/utils/IFilter/FilterKey;)[J bool inline = true
CompileCommand: inline org/apache/cassandra/utils/BloomFilter.setIndexes(JJIJ[J)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/ByteBufferUtil.compare(Ljava/nio/ByteBuffer;[B)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/ByteBufferUtil.compare([BLjava/nio/ByteBuffer;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/ByteBufferUtil.compareUnsigned(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/FastByteOperations$UnsafeOperations.compareTo(Ljava/lang/Object;JILjava/lang/Object;JI)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/FastByteOperations$UnsafeOperations.compareTo(Ljava/lang/Object;JILjava/nio/ByteBuffer;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/FastByteOperations$UnsafeOperations.compareTo(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/concurrent/Awaitable$AsyncAwaitable.await(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/function/Predicate;Lorg/apache/cassandra/utils/concurrent/Awaitable;)Lorg/apache/cassandra/utils/concurrent/Awaitable; bool inline = true
CompileCommand: inline org/apache/cassandra/utils/concurrent/Awaitable$AsyncAwaitable.awaitUntil(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/function/Predicate;Lorg/apache/cassandra/utils/concurrent/Awaitable;J)Z bool inline = true
CompileCommand: inline org/apache/cassandra/utils/concurrent/Awaitable$AsyncAwaitable.register(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/function/Predicate;Lorg/apache/cassandra/utils/concurrent/Awaitable;)Lorg/apache/cassandra/utils/concurrent/WaitQueue/Signal; bool inline = true
CompileCommand: inline org/apache/cassandra/utils/concurrent/Awaitable$AsyncAwaitable.signalAll(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Lorg/apache/cassandra/utils/concurrent/Awaitable;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/concurrent/IntrusiveStack.push(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/apache/cassandra/utils/concurrent/IntrusiveStack;)Lorg/apache/cassandra/utils/concurrent/IntrusiveStack; bool inline = true
CompileCommand: inline org/apache/cassandra/utils/concurrent/IntrusiveStack.push(Ljava/util/function/Function;Lorg/apache/cassandra/utils/concurrent/IntrusiveStack/Setter;Ljava/lang/Object;Lorg/apache/cassandra/utils/concurrent/IntrusiveStack;)Lorg/apache/cassandra/utils/concurrent/IntrusiveStack; bool inline = true
CompileCommand: inline org/apache/cassandra/utils/concurrent/ListenerList.push(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/apache/cassandra/utils/concurrent/ListenerList;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/concurrent/ListenerList.pushExclusive(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/apache/cassandra/utils/concurrent/ListenerList;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/memory/BufferPool$LocalPool.tryGetInternal(IZ)Ljava/nio/ByteBuffer; bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.encodeUnsignedVInt(JI)[B bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeUnsignedVInt(JLjava/lang/Object;ILorg/apache/cassandra/db/marshal/ValueAccessor;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeUnsignedVInt(JLjava/nio/ByteBuffer;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeUnsignedVInt(JLorg/apache/cassandra/io/util/DataOutputPlus;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeUnsignedVInt32(ILjava/lang/Object;ILorg/apache/cassandra/db/marshal/ValueAccessor;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeUnsignedVInt32(ILjava/nio/ByteBuffer;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeVInt(JLjava/lang/Object;ILorg/apache/cassandra/db/marshal/ValueAccessor;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeVInt(JLjava/nio/ByteBuffer;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeVInt(JLorg/apache/cassandra/io/util/DataOutputPlus;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeVInt32(ILjava/lang/Object;ILorg/apache/cassandra/db/marshal/ValueAccessor;)I bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeVInt32(ILjava/nio/ByteBuffer;)V bool inline = true
CompileCommand: inline org/apache/cassandra/utils/vint/VIntCoding.writeVInt32(ILorg/apache/cassandra/io/util/DataOutputPlus;)V bool inline = true
INFO  [main] 2025-03-17 02:28:21,891 YamlConfigurationLoader.java:101 - Configuration location: file:/opt/homebrew/etc/cassandra/cassandra.yaml
INFO  [main] 2025-03-17 02:28:22,038 Config.java:1352 - Node configuration:[allocate_tokens_for_keyspace=null; allocate_tokens_for_local_replication_factor=3; allow_extra_insecure_udfs=false; allow_filtering_enabled=true; allow_insecure_udfs=false; alter_table_enabled=true; audit_logging_options=AuditLogOptions{enabled=false, logger='BinAuditLogger', included_keyspaces='', excluded_keyspaces='system,system_schema,system_virtual_schema', included_categories='', excluded_categories='', included_users='', excluded_users='', audit_logs_dir='/opt/homebrew/var/log/cassandra/audit', archive_command='', roll_cycle='HOURLY', block=true, max_queue_weight=268435456, max_log_size=17179869184, max_archive_retries=10}; auth_cache_warming_enabled=false; auth_read_consistency_level=LOCAL_QUORUM; auth_write_consistency_level=EACH_QUORUM; authenticator=AllowAllAuthenticator{}; authorizer=AllowAllAuthorizer{}; auto_bootstrap=true; auto_hints_cleanup_enabled=false; auto_optimise_full_repair_streams=false; auto_optimise_inc_repair_streams=false; auto_optimise_preview_repair_streams=false; auto_snapshot=true; auto_snapshot_ttl=null; autocompaction_on_startup_enabled=true; automatic_sstable_upgrade=false; available_processors=-1; back_pressure_enabled=false; back_pressure_strategy=null; batch_size_fail_threshold=50KiB; batch_size_warn_threshold=5KiB; batchlog_endpoint_strategy=random_remote; batchlog_replay_throttle=1024KiB; block_for_peers_in_remote_dcs=false; block_for_peers_timeout_in_secs=10; broadcast_address=null; broadcast_rpc_address=null; buffer_pool_use_heap_if_exhausted=false; cache_load_timeout=30s; cas_contention_timeout=1000ms; cdc_block_writes=true; cdc_enabled=false; cdc_free_space_check_interval=250ms; cdc_on_repair_enabled=true; cdc_raw_directory=null; cdc_total_space=0MiB; check_for_duplicate_rows_during_compaction=true; check_for_duplicate_rows_during_reads=true; cidr_authorizer=AllowAllCIDRAuthorizer; client_encryption_options=<REDACTED>; client_error_reporting_exclusions=SubnetGroups{subnets=[]}; client_request_size_metrics_enabled=true; cluster_name=Test Cluster; collection_size_fail_threshold=null; collection_size_warn_threshold=null; column_index_cache_size=2KiB; column_index_size=null; column_value_size_fail_threshold=null; column_value_size_warn_threshold=null; columns_per_table_fail_threshold=-1; columns_per_table_warn_threshold=-1; commit_failure_policy=stop; commitlog_compression=null; commitlog_directory=null; commitlog_disk_access_mode=legacy; commitlog_max_compression_buffers_in_pool=3; commitlog_segment_size=32MiB; commitlog_sync=periodic; commitlog_sync_group_window=0ms; commitlog_sync_period=10000ms; commitlog_total_space=null; compact_tables_enabled=true; compaction_throughput=64MiB/s; concurrent_compactors=null; concurrent_counter_writes=32; concurrent_index_builders=2; concurrent_materialized_view_builders=1; concurrent_materialized_view_writes=32; concurrent_merkle_tree_requests=0; concurrent_reads=32; concurrent_validations=0; concurrent_writes=32; consecutive_message_errors_threshold=1; coordinator_read_size_fail_threshold=null; coordinator_read_size_warn_threshold=null; corrupted_tombstone_strategy=disabled; counter_cache_keys_to_save=2147483647; counter_cache_save_period=7200s; counter_cache_size=null; counter_write_request_timeout=5000ms; cql_start_time=REQUEST; credentials_cache_active_update=false; credentials_cache_max_entries=1000; credentials_update_interval=null; credentials_validity=2000ms; crypto_provider=org.apache.cassandra.security.DefaultCryptoProvider{fail_on_missing_provider=false}; data_disk_usage_max_disk_size=null; data_disk_usage_percentage_fail_threshold=-1; data_disk_usage_percentage_warn_threshold=-1; data_file_directories=[Ljava.lang.String;@5b7a8434; default_compaction=null; default_keyspace_rf=1; default_secondary_index=legacy_local_table; default_secondary_index_enabled=true; denylist_consistency_level=QUORUM; denylist_initial_load_retry=5s; denylist_max_keys_per_table=1000; denylist_max_keys_total=10000; denylist_range_reads_enabled=true; denylist_reads_enabled=true; denylist_refresh=600s; denylist_writes_enabled=true; diagnostic_events_enabled=false; disk_access_mode=mmap_index_only; disk_failure_policy=stop; disk_optimization_estimate_percentile=0.95; disk_optimization_page_cross_chance=0.1; disk_optimization_strategy=ssd; drop_compact_storage_enabled=false; drop_keyspace_enabled=true; drop_truncate_table_enabled=true; dump_heap_on_uncaught_exception=false; dynamic_data_masking_enabled=false; dynamic_snitch=true; dynamic_snitch_badness_threshold=1.0; dynamic_snitch_reset_interval=600000ms; dynamic_snitch_update_interval=100ms; endpoint_snitch=SimpleSnitch; enforce_native_deadline_for_hints=false; entire_sstable_inter_dc_stream_throughput_outbound=24MiB/s; entire_sstable_stream_throughput_outbound=24MiB/s; failure_detector=FailureDetector; fields_per_udt_fail_threshold=-1; fields_per_udt_warn_threshold=-1; file_cache_enabled=false; file_cache_round_up=null; file_cache_size=null; flush_compression=fast; force_new_prepared_statement_behaviour=false; full_query_logging_options=FullQueryLoggerOptions{log_dir='', archive_command='', roll_cycle='HOURLY', block=true, max_queue_weight=268435456, max_log_size=17179869184}; gc_log_threshold=200ms; gc_warn_threshold=1s; group_by_enabled=true; heap_dump_path=heapdump; hint_window_persistent_enabled=true; hinted_handoff_disabled_datacenters=[]; hinted_handoff_enabled=true; hinted_handoff_throttle=1024KiB; hints_compression=null; hints_directory=null; hints_flush_period=10000ms; ideal_consistency_level=null; in_select_cartesian_product_fail_threshold=-1; in_select_cartesian_product_warn_threshold=-1; incremental_backups=false; index_summary_capacity=null; index_summary_resize_interval=60m; initial_range_tombstone_list_allocation_size=1; initial_token=null; inter_dc_stream_throughput_outbound=24MiB/s; inter_dc_tcp_nodelay=false; internode_application_receive_queue_capacity=4MiB; internode_application_receive_queue_reserve_endpoint_capacity=128MiB; internode_application_receive_queue_reserve_global_capacity=512MiB; internode_application_send_queue_capacity=4MiB; internode_application_send_queue_reserve_endpoint_capacity=128MiB; internode_application_send_queue_reserve_global_capacity=512MiB; internode_authenticator=null; internode_compression=dc; internode_error_reporting_exclusions=SubnetGroups{subnets=[]}; internode_max_message_size=null; internode_socket_receive_buffer_size=0B; internode_socket_send_buffer_size=0B; internode_streaming_tcp_user_timeout=300s; internode_tcp_connect_timeout=2s; internode_tcp_user_timeout=30s; internode_timeout=true; intersect_filtering_query_enabled=true; intersect_filtering_query_warned=true; items_per_collection_fail_threshold=-1; items_per_collection_warn_threshold=-1; key_cache_invalidate_after_sstable_deletion=false; key_cache_keys_to_save=2147483647; key_cache_migrate_during_compaction=true; key_cache_save_period=4h; key_cache_size=null; keyspaces_fail_threshold=-1; keyspaces_warn_threshold=-1; listen_address=localhost; listen_interface=null; listen_interface_prefer_ipv6=false; listen_on_broadcast_address=false; local_read_size_fail_threshold=null; local_read_size_warn_threshold=null; local_system_data_file_directory=null; log_out_of_token_range_requests=true; materialized_views_enabled=false; materialized_views_per_table_fail_threshold=-1; materialized_views_per_table_warn_threshold=-1; max_concurrent_automatic_sstable_upgrades=1; max_hint_window=3h; max_hints_delivery_threads=2; max_hints_file_size=128MiB; max_hints_size_per_host=0B; max_mutation_size=null; max_space_usable_for_compactions_in_percentage=0.95; max_streaming_retries=3; max_top_size_partition_count=10; max_top_tombstone_partition_count=10; max_value_size=256MiB; maximum_replication_factor_fail_threshold=-1; maximum_replication_factor_warn_threshold=-1; maximum_timestamp_fail_threshold=null; maximum_timestamp_warn_threshold=null; memtable=org.apache.cassandra.config.Config$MemtableOptions@4eaf3684; memtable_allocation_type=heap_buffers; memtable_cleanup_threshold=null; memtable_flush_writers=0; memtable_heap_space=null; memtable_offheap_space=null; min_free_space_per_drive=50MiB; min_tracked_partition_size=1MiB; min_tracked_partition_tombstone_count=5000; minimum_replication_factor_fail_threshold=-1; minimum_replication_factor_warn_threshold=-1; minimum_timestamp_fail_threshold=null; minimum_timestamp_warn_threshold=null; native_transport_allow_older_protocols=true; native_transport_flush_in_batches_legacy=false; native_transport_idle_timeout=0ms; native_transport_max_auth_threads=4; native_transport_max_backoff_on_queue_overload=200ms; native_transport_max_concurrent_connections=-1; native_transport_max_concurrent_connections_per_ip=-1; native_transport_max_frame_size=16MiB; native_transport_max_message_size=null; native_transport_max_request_data_in_flight=null; native_transport_max_request_data_in_flight_per_ip=null; native_transport_max_requests_per_second=1000000; native_transport_max_threads=128; native_transport_min_backoff_on_queue_overload=10ms; native_transport_port=9042; native_transport_port_ssl=null; native_transport_queue_max_item_age_threshold=1.7976931348623157E308; native_transport_rate_limiting_enabled=false; native_transport_receive_queue_capacity=1MiB; native_transport_throw_on_overload=false; native_transport_timeout=12s; network_authorizer=AllowAllNetworkAuthorizer{}; networking_cache_size=null; non_partition_restricted_index_query_enabled=true; num_tokens=16; otc_backlog_expiration_interval_ms=200; otc_coalescing_enough_coalesced_messages=8; otc_coalescing_strategy=DISABLED; otc_coalescing_window_us=200; page_size_fail_threshold=-1; page_size_warn_threshold=-1; partition_denylist_enabled=false; partition_keys_in_select_fail_threshold=-1; partition_keys_in_select_warn_threshold=-1; partition_size_fail_threshold=null; partition_size_warn_threshold=null; partition_tombstones_fail_threshold=-1; partition_tombstones_warn_threshold=-1; partitioner=org.apache.cassandra.dht.Murmur3Partitioner; paxos_cache_size=null; paxos_contention_max_wait=null; paxos_contention_min_delta=null; paxos_contention_min_wait=null; paxos_contention_wait_randomizer=null; paxos_on_linearizability_violations=ignore; paxos_purge_grace_period=60s; paxos_repair_enabled=true; paxos_repair_parallelism=-1; paxos_state_purging=null; paxos_topology_repair_no_dc_checks=false; paxos_topology_repair_strict_each_quorum=false; paxos_variant=v1; periodic_commitlog_sync_lag_block=null; permissions_cache_active_update=false; permissions_cache_max_entries=1000; permissions_update_interval=null; permissions_validity=2000ms; phi_convict_threshold=8.0; prepared_statements_cache_size=null; range_request_timeout=10000ms; range_tombstone_list_growth_factor=1.5; read_before_write_list_operations_enabled=true; read_consistency_levels_disallowed=[]; read_consistency_levels_warned=[]; read_request_timeout=5000ms; read_thresholds_enabled=false; reject_out_of_token_range_requests=false; reject_repair_compaction_threshold=2147483647; repair_command_pool_full_strategy=queue; repair_command_pool_size=0; repair_request_timeout=120000ms; repair_session_max_tree_depth=null; repair_session_space=null; repair_state_expires=3d; repair_state_size=100000; repaired_data_tracking_for_partition_reads_enabled=false; repaired_data_tracking_for_range_reads_enabled=false; report_unconfirmed_repaired_data_mismatches=false; request_timeout=10000ms; role_manager=CassandraRoleManager{}; roles_cache_active_update=false; roles_cache_max_entries=1000; roles_update_interval=null; roles_validity=2000ms; row_cache_class_name=org.apache.cassandra.cache.OHCProvider; row_cache_keys_to_save=2147483647; row_cache_save_period=0s; row_cache_size=0MiB; row_index_read_size_fail_threshold=null; row_index_read_size_warn_threshold=null; rpc_address=localhost; rpc_interface=null; rpc_interface_prefer_ipv6=false; rpc_keepalive=true; sai_frozen_term_size_fail_threshold=8KiB; sai_frozen_term_size_warn_threshold=1KiB; sai_options=org.apache.cassandra.config.StorageAttachedIndexOptions@2141a12; sai_sstable_indexes_per_query_fail_threshold=-1; sai_sstable_indexes_per_query_warn_threshold=32; sai_string_term_size_fail_threshold=8KiB; sai_string_term_size_warn_threshold=1KiB; sai_vector_term_size_fail_threshold=32KiB; sai_vector_term_size_warn_threshold=16KiB; sasi_indexes_enabled=false; saved_caches_directory=null; scripted_user_defined_functions_enabled=false; secondary_indexes_enabled=true; secondary_indexes_per_table_fail_threshold=-1; secondary_indexes_per_table_warn_threshold=-1; seed_provider=org.apache.cassandra.locator.SimpleSeedProvider{seeds=127.0.0.1:7000}; server_encryption_options=<REDACTED>; severity_during_decommission=0.0; simplestrategy_enabled=true; skip_paxos_repair_on_topology_change=false; skip_paxos_repair_on_topology_change_keyspaces=[]; skip_stream_disk_space_check=false; slow_query_log_timeout=500ms; snapshot_before_compaction=false; snapshot_links_per_second=0; snapshot_on_duplicate_row_detection=false; snapshot_on_repaired_data_mismatch=false; ssl_storage_port=7001; sstable_preemptive_open_interval=50MiB; sstable_read_rate_persistence_enabled=false; start_native_transport=true; startup_checks={}; storage_compatibility_mode=CASSANDRA_4; storage_port=7000; stream_entire_sstables=true; stream_throughput_outbound=24MiB/s; stream_transfer_task_timeout=12h; streaming_connections_per_host=1; streaming_keep_alive_period=300s; streaming_slow_events_log_timeout=10s; streaming_state_expires=3d; streaming_state_size=40MiB; streaming_stats_enabled=true; table_properties_disallowed=[]; table_properties_ignored=[]; table_properties_warned=[]; tables_fail_threshold=-1; tables_warn_threshold=-1; tombstone_failure_threshold=100000; tombstone_warn_threshold=1000; top_partitions_enabled=true; trace_type_query_ttl=1d; trace_type_repair_ttl=7d; transfer_hints_on_decommission=true; transient_replication_enabled=false; transparent_data_encryption_options=org.apache.cassandra.config.TransparentDataEncryptionOptions@5c45d770; traverse_auth_from_root=false; trickle_fsync=false; trickle_fsync_interval=10240KiB; truncate_request_timeout=60000ms; uncompressed_tables_enabled=true; unlogged_batch_across_partitions_warn_threshold=10; use_creation_time_for_hint_ttl=true; use_deterministic_table_id=false; use_offheap_merkle_trees=true; use_statements_enabled=true; user_defined_functions_enabled=false; user_defined_functions_fail_timeout=1500ms; user_defined_functions_threads_enabled=true; user_defined_functions_warn_timeout=500ms; user_function_timeout_policy=die; user_timestamps_enabled=true; uuid_sstable_identifiers_enabled=false; validation_preview_purge_head_start=3600s; vector_dimensions_fail_threshold=-1; vector_dimensions_warn_threshold=-1; vector_type_enabled=true; windows_timer_interval=0; write_consistency_levels_disallowed=[]; write_consistency_levels_warned=[]; write_request_timeout=2000ms; zero_ttl_on_twcs_enabled=true; zero_ttl_on_twcs_warned=true]
INFO  [main] 2025-03-17 02:28:22,055 DatabaseDescriptor.java:1633 - Supported sstable formats are: big -> org.apache.cassandra.io.sstable.format.big.BigFormat with singleton components: [Data.db, Index.db, Statistics.db, CompressionInfo.db, Filter.db, Summary.db, Digest.crc32, CRC.db, TOC.txt], bti -> org.apache.cassandra.io.sstable.format.bti.BtiFormat with singleton components: [Data.db, Partitions.db, Rows.db, Statistics.db, CompressionInfo.db, Filter.db, Digest.crc32, CRC.db, TOC.txt]
WARN  [main] 2025-03-17 02:28:22,077 AbstractCryptoProvider.java:177 - com.amazon.corretto.crypto.provider.AmazonCorrettoCryptoProvider is not on the class path! Check node's architecture (`uname -m`) is supported, see lib/<arch> subdirectories. The correct architecture-specific library for needs to be on the classpath.
INFO  [main] 2025-03-17 02:28:22,078 DatabaseDescriptor.java:548 - DiskAccessMode is standard, indexAccessMode is mmap
INFO  [main] 2025-03-17 02:28:22,078 DatabaseDescriptor.java:587 - Global memtable on-heap threshold is enabled at 512MiB
INFO  [main] 2025-03-17 02:28:22,078 DatabaseDescriptor.java:591 - Global memtable off-heap threshold is enabled at 512MiB
INFO  [main] 2025-03-17 02:28:22,091 DatabaseDescriptor.java:639 - commitlog_disk_access_mode resolved to: mmap
INFO  [main] 2025-03-17 02:28:22,092 DatabaseDescriptor.java:659 - Native transport rate-limiting disabled.
ERROR [main] 2025-03-17 02:28:23,062 CassandraDaemon.java:887 - Port already in use: 7199; nested exception is: 
	java.net.BindException: Address already in use
java.net.BindException: Address already in use
	at java.base/sun.nio.ch.Net.bind0(Native Method)
	at java.base/sun.nio.ch.Net.bind(Net.java:555)
	at java.base/sun.nio.ch.Net.bind(Net.java:544)
	at java.base/sun.nio.ch.NioSocketImpl.bind(NioSocketImpl.java:648)
	at java.base/java.net.ServerSocket.bind(ServerSocket.java:388)
	at java.base/java.net.ServerSocket.<init>(ServerSocket.java:274)
	at java.base/javax.net.DefaultServerSocketFactory.createServerSocket(ServerSocketFactory.java:231)
	at org.apache.cassandra.utils.RMIServerSocketFactoryImpl.createServerSocket(RMIServerSocketFactoryImpl.java:42)
	at java.rmi/sun.rmi.transport.tcp.TCPEndpoint.newServerSocket(TCPEndpoint.java:673)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.listen(TCPTransport.java:335)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.exportObject(TCPTransport.java:243)
	at java.rmi/sun.rmi.transport.tcp.TCPEndpoint.exportObject(TCPEndpoint.java:415)
	at java.rmi/sun.rmi.transport.LiveRef.exportObject(LiveRef.java:147)
	at java.rmi/sun.rmi.server.UnicastServerRef.exportObject(UnicastServerRef.java:235)
	at java.rmi/sun.rmi.registry.RegistryImpl.setup(RegistryImpl.java:223)
	at java.rmi/sun.rmi.registry.RegistryImpl.<init>(RegistryImpl.java:182)
	at java.rmi/sun.rmi.registry.RegistryImpl.<init>(RegistryImpl.java:152)
	at org.apache.cassandra.utils.JMXServerUtils$JmxRegistry.<init>(JMXServerUtils.java:349)
	at org.apache.cassandra.utils.JMXServerUtils.createJMXServer(JMXServerUtils.java:100)
	at org.apache.cassandra.utils.JMXServerUtils.createJMXServer(JMXServerUtils.java:156)
	at org.apache.cassandra.service.CassandraDaemon.maybeInitJmx(CassandraDaemon.java:178)
	at org.apache.cassandra.service.CassandraDaemon.setup(CassandraDaemon.java:246)
	at org.apache.cassandra.service.CassandraDaemon.activate(CassandraDaemon.java:727)
	at org.apache.cassandra.service.CassandraDaemon.main(CassandraDaemon.java:865)

(base) fis011@fis011 ~ % cqlsh
Connected to Test Cluster at 127.0.0.1:9042
[cqlsh 6.2.0 | Cassandra 5.0.3 | CQL spec 3.4.7 | Native protocol v5]
Use HELP for help.
cqlsh> DESCRIBE KEYPACES;
'keypaces' not found in keyspaces
cqlsh> DESCRIBE KEYSPACES;

system       system_distributed  system_traces  system_virtual_schema
system_auth  system_schema       system_views 

cqlsh> CREAT KEYSPACES stock_data WITH replication ={'class':'SimpleStrategy','replication_factor':1};
SyntaxException: line 1:0 no viable alternative at input 'CREAT' ([CREAT]...)
cqlsh> CREATE KEYSPACES stock_data WITH replication ={'class':'SimpleStrategy','replication_factor':1};
SyntaxException: line 1:7 no viable alternative at input 'KEYSPACES' ([CREATE] KEYSPACES...)
cqlsh> CREATE KEYSPACE stock_data WITH replication ={'class':'SimpleStrategy','replication_factor':1};
cqlsh> DESCRIBE KEYSPACES;

stock_data  system_auth         system_schema  system_views         
system      system_distributed  system_traces  system_virtual_schema

cqlsh> USE stock_data;
cqlsh:stock_data> CREATE TABLE candlestick_data (
              ...               ...     symbol TEXT,
              ...               ...     time TIMESTAMP PRIMARY KEY,
              ...               ...     open_price FLOAT,
              ...               ...     high_price FLOAT,
              ...               ...     low_price FLOAT,
              ...               ...     close_price FLOAT,
              ...               ...     volume INT,
              ...               ...     value FLOAT
              ...               ... );
SyntaxException: line 2:14 no viable alternative at input '..' (CREATE TABLE candlestick_data (              [..]...)
cqlsh:stock_data> cqlsh:stock_data> REATE TABLE candlestick_data (
              ...               symbol TEXT,
              ...               time TIMESTAMP PRIMARY KEY,
              ...               open_price FLOAT,
              ...               high_price FLOAT,
              ...               low_price FLOAT,
              ...               close_price FLOAT,
              ...               volume INT,
              ...               value FLOAT
              ...               );
SyntaxException: line 1:0 no viable alternative at input 'REATE' ([REATE]...)
cqlsh:stock_data> CREATE TABLE candlestick_data (
              ...     symbol TEXT NOT NULL,                -- Symbol of the asset (e.g., stock ticker or crypto pair)
              ...     time TIMESTAMP PRIMARY KEY,          -- Timestamp for the data point (used as unique key)
              ...     open_price FLOAT NOT NULL,           -- Opening price of the asset for the given time period
              ...     high_price FLOAT NOT NULL,           -- Highest price during the time period
              ...     low_price FLOAT NOT NULL,            -- Lowest price during the time period
              ...     close_price FLOAT NOT NULL,          -- Closing price of the asset for the given time period
              ...     volume INT NOT NULL,                 -- Trading volume (e.g., number of shares or contracts)
              ...     value FLOAT NOT NULL                 -- Total value of the trading activity (e.g., open_price * volume)
              ... );
SyntaxException: line 2:16 no viable alternative at input 'NOT' (CREATE TABLE candlestick_data (    symbol [TEXT] NOT...)
cqlsh:stock_data> CREATE TABLE candlestick_data (
              ...     symbol TEXT NOT NULL,                -- รหัสของสินทรัพย์ (เช่น รหัสหุ้น หรือสกุลเงิน)
              ...     time TIMESTAMP PRIMARY KEY,          -- เวลาของข้อมูล (ใช้เป็นคีย์หลัก)
              ...     open_price FLOAT NOT NULL,           -- ราคาที่เปิดของสินทรัพย์ในช่วงเวลานั้น
              ...     high_price FLOAT NOT NULL,           -- ราคาสูงสุดในช่วงเวลานั้น
              ...     low_price FLOAT NOT NULL,            -- ราคาต่ำสุดในช่วงเวลานั้น
              ...     close_price FLOAT NOT NULL,          -- ราคาปิดของสินทรัพย์ในช่วงเวลานั้น
              ...     volume INT NOT NULL,                 -- ปริมาณการซื้อขาย (เช่น จำนวนหุ้นหรือสัญญา)
              ...     value FLOAT NOT NULL,                -- มูลค่ารวมของการซื้อขาย (เช่น open_price * volume)
              ...     CONSTRAINT unique_symbol_time UNIQUE(symbol, time)  -- สร้างข้อจำกัดว่า symbol + time ต้องไม่ซ้ำกัน
              ... );
SyntaxException: line 2:16 no viable alternative at input 'NOT' (CREATE TABLE candlestick_data (    symbol [TEXT] NOT...)
cqlsh:stock_data> SELECT * FROM candlestick_data;

 time                            | close_price | high_price | low_price | open_price | symbol | value      | volume
---------------------------------+-------------+------------+-----------+------------+--------+------------+---------
 2025-03-07 00:00:00.000000+0000 |         149 |        149 |     145.5 |      146.5 |    BBL | 1.1453e+09 | 7787374
 2025-03-05 00:00:00.000000+0000 |       148.5 |      148.5 |       147 |        148 |    BBL | 6.5783e+08 | 4448707
 2025-03-10 00:00:00.000000+0000 |         147 |      149.5 |       147 |        149 |    BBL | 7.1254e+08 | 4817315
 2025-03-13 00:00:00.000000+0000 |       146.5 |      147.5 |       145 |        147 |    BBL |  1.347e+09 | 9240514
 2025-03-17 00:00:00.000000+0000 |       146.5 |        150 |       146 |      146.5 |    BBL | 3.8395e+05 |    2600
 2025-03-04 00:00:00.000000+0000 |       147.5 |        149 |       147 |      147.5 |    BBL | 6.7569e+08 | 4569076
 2025-03-11 00:00:00.000000+0000 |       147.5 |      147.5 |     145.5 |        146 |    BBL | 8.8974e+08 | 6072932
 2025-03-06 00:00:00.000000+0000 |         147 |      148.5 |       146 |      148.5 |    BBL | 9.6442e+08 | 6551466
 2025-03-14 00:00:00.000000+0000 |       145.5 |      147.5 |     145.5 |      146.5 |    BBL | 7.9696e+08 | 5441742
 2025-03-12 00:00:00.000000+0000 |       146.5 |        148 |       146 |        147 |    BBL | 9.2311e+08 | 6285053

(10 rows)
cqlsh:stock_data> SELECT * FROM candlestick_data;

 time                            | close_price | high_price | low_price | open_price | symbol | value       | volume
---------------------------------+-------------+------------+-----------+------------+--------+-------------+----------
 2025-03-07 00:00:00.000000+0000 |         0.5 |        0.5 |      0.49 |        0.5 |     AF |  1276.21997 |     2580
 2025-03-05 00:00:00.000000+0000 |        0.51 |       0.54 |      0.51 |       0.54 |     AF |        3311 |     6300
 2025-03-10 00:00:00.000000+0000 |        0.49 |        0.5 |      0.49 |        0.5 |     AF |  2223.63989 |     4507
 2023-05-17 00:00:00.000000+0000 |        0.33 |       0.36 |      0.21 |       0.22 |   ACAP |  3.6176e+06 | 13918556
 2025-03-13 00:00:00.000000+0000 |        0.43 |       0.44 |      0.43 |       0.44 |     AF |  1076.90002 |     2502
 2023-05-15 00:00:00.000000+0000 |        0.41 |       0.47 |      0.41 |       0.46 |   ACAP |  2.5364e+06 |  5691501
 2025-03-03 00:00:00.000000+0000 |        0.53 |       0.54 |      0.51 |       0.53 |     AF |      1477.5 |     2801
 2023-05-10 00:00:00.000000+0000 |        0.48 |       0.48 |      0.45 |       0.47 |   ACAP |  4.3546e+05 |   939302
 2023-05-09 00:00:00.000000+0000 |        0.48 |       0.48 |      0.46 |       0.47 |   ACAP |  6.4708e+05 |  1356000
 2025-03-17 00:00:00.000000+0000 |         286 |        286 |       286 |        286 | ADVANC |       28600 |      100
 2023-05-03 00:00:00.000000+0000 |        0.44 |       0.44 |      0.39 |       0.39 |   ACAP |  4.4027e+05 |  1032611
 2023-05-12 00:00:00.000000+0000 |        0.48 |        0.5 |      0.46 |        0.5 |   ACAP |  5.4745e+05 |  1145622
 2023-05-16 00:00:00.000000+0000 |        0.29 |       0.38 |      0.29 |       0.35 |   ACAP |  3.9581e+06 | 12805628
 2025-03-04 00:00:00.000000+0000 |        0.52 |       0.54 |      0.52 |       0.54 |     AF |         376 |      700
 2023-05-11 00:00:00.000000+0000 |        0.49 |       0.49 |      0.46 |       0.47 |   ACAP |  5.2224e+05 |  1092304
 2025-03-11 00:00:00.000000+0000 |        0.47 |       0.49 |      0.46 |       0.49 |     AF |       10028 |    21300
 2025-03-06 00:00:00.000000+0000 |         0.5 |       0.53 |       0.5 |       0.53 |     AF |         654 |     1300
 2023-05-02 00:00:00.000000+0000 |        0.41 |       0.43 |      0.39 |        0.4 |   ACAP |  2.5591e+05 |   622148
 2025-03-14 00:00:00.000000+0000 |        0.41 |       0.43 |      0.39 |       0.41 |     AF | 17524.42969 |    43301
 2025-03-12 00:00:00.000000+0000 |        0.42 |       0.46 |      0.42 |       0.46 |     AF |       27846 |    62800
 2023-05-08 00:00:00.000000+0000 |        0.48 |        0.5 |      0.41 |       0.41 |   ACAP |  8.0901e+05 |  1699500

(21 rows)
cqlsh:stock_data> 
cqlsh:stock_data> python script.py > output.txt
              ... 
              ... 
              ... 
